{"mappings":"YA2CA,SAASA,EAAcC,EAAUC,GAS/B,OARgB,IAAIC,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAEpCH,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,IAjDXM,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAA8BC,EAAAF,EAAIG,cAAcC,SAAzCC,EAAuBH,EAAvBX,MAAOe,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,OAEpBC,YAAW,WACT,IAAIC,EAAW,EAUf,GARApB,EAAcoB,EAAUJ,EAAMK,OAC3BC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAI,qBAAoCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvDyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,QAAQI,MAAM,oBAAmCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAG9B,IAAzB2B,OAAOX,EAAOG,OAIlB,IAAMS,EAAaC,aAAY,WAG7B/B,EAFAoB,GAAY,EAEYJ,EAAMK,OAC3BC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAI,qBAAoCC,OAAfzB,EAAS,QAA0DyB,OAApDG,OAAO3B,GAAS2B,OAAOZ,EAAKI,QAAUpB,EAAW,GAAG,M,IAErG0B,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,QAAQI,MAAM,oBAAmCF,OAAfzB,EAAS,QAA0DyB,OAApDG,OAAO3B,GAAS2B,OAAOZ,EAAKI,QAAUpB,EAAW,GAAG,M,IAEtG+B,SAAQ,WACHZ,IAAaS,OAAOX,EAAOG,QAC7BY,cAAcH,E,MAGnBb,EAAKI,M,GACPL,EAAMK,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const {delay, step, amount} = evt.currentTarget.elements;\n\n  setTimeout(() => {\n    let position = 1;\n\n    createPromise(position, delay.value)\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.error(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (Number(amount.value) === 1) {\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      position += 1;\n\n      createPromise(position, delay.value)\n        .then(({ position, delay }) => {\n          console.log(`Fulfilled promise ${position} in ${Number(delay) + Number(step.value) * (position - 1)}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.error(`Rejected promise ${position} in ${Number(delay) + Number(step.value) * (position - 1)}ms`);\n        })\n        .finally(() => {\n          if (position === Number(amount.value)) {\n            clearInterval(intervalId);\n          }\n        });\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  })\n  return promise;\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","setTimeout","position1","value","then","param","console","log","concat","catch","error","Number","intervalId","setInterval","finally","clearInterval"],"version":3,"file":"03-promises.dd115aab.js.map"}